class Solution {
public:
   
    vector<string> find(int n)
    {
        //code here
        if(n==1){
            vector<string> part;
            part.push_back("0");
            part.push_back("1");
            return part;
        }
        vector<string> got=find(n-1);
        vector<string> ans;
        for(int i=0;i<got.size();i++){
            ans.push_back("0"+got[i]);
            
        }
        for(int i=got.size()-1;i>=0;i--){
            ans.push_back("1"+got[i]);
            
        }
        return ans;
        
    }
    void sol(vector<string> ans, vector<int> &v){
        int n=ans.size();
        for(auto it: ans){
            int s=it.size()-1;
            int sum=0;
            for(int i=0;i<it.size();i++){
                if(it[i]=='0'){
                    s--;
                }
                else{
                    sum+=pow(2, s)*1;
                    s--;
                }
            }
            v.push_back(sum);
        }
    }
    vector<int> grayCode(int n) {
        vector<string> ans=find(n);
    
        vector<int> v;
        sol(ans, v);
        return v;
    }
};
____________________________________________________________________________________________________________________________

class Solution {
public:
    vector<int> grayCode(int n) {
        vector<int> ans(1<<n);
        for (int i=0; i<(1<<n); i++) 
            ans[i] = i^(i>>1);
        return ans;
    }
};
